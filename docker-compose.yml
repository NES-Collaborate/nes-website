services:
  backend:
    container_name: nes-backend
    image: python:3.12-slim
    volumes:
      - ./backend:/app
    working_dir: /app
    environment:
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_HOST: nes-postgres
      DATABASE_PORT: ${POSTGRES_PORT}
    ports:
      - "8000:8000"
    networks:
      - nes-network
    command: >
      sh -c "
      pip install --no-cache-dir -r requirements.txt &&
      apt-get update && apt-get install -y make &&
      make init-db &&
      make run
      "

  frontend:
    container_name: nes-frontend
    image: node:18
    volumes:
      - ./frontend:/app
    working_dir: /app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - nes-network
    command: >
      sh -c "
      npm install &&
      npm run build &&
      npm start
      "

  nginx:
    container_name: nes-proxy
    image: nginx:1.25.3-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - nes-network

  db:
    image: postgres:latest
    container_name: nes-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nes-network

volumes:
  postgres_data:

networks:
  nes-network:
    driver: bridge
